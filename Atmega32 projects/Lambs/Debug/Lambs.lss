
Lambs.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a1a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000e4c  00000000  00000000  00000a70  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000047b  00000000  00000000  000018bc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 90 02 	call	0x520	; 0x520 <main>
  64:	0c 94 0b 05 	jmp	0xa16	; 0xa16 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <Delay_ms>:
#include "STD_TYPES.h"
void Delay_ms(u32 DelayValue)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
  74:	2c 97       	sbiw	r28, 0x0c	; 12
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	0f be       	out	0x3f, r0	; 63
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	69 87       	std	Y+9, r22	; 0x09
  82:	7a 87       	std	Y+10, r23	; 0x0a
  84:	8b 87       	std	Y+11, r24	; 0x0b
  86:	9c 87       	std	Y+12, r25	; 0x0c
	u32 i;
	u32 counts=370*DelayValue;
  88:	89 85       	ldd	r24, Y+9	; 0x09
  8a:	9a 85       	ldd	r25, Y+10	; 0x0a
  8c:	ab 85       	ldd	r26, Y+11	; 0x0b
  8e:	bc 85       	ldd	r27, Y+12	; 0x0c
  90:	22 e7       	ldi	r18, 0x72	; 114
  92:	31 e0       	ldi	r19, 0x01	; 1
  94:	40 e0       	ldi	r20, 0x00	; 0
  96:	50 e0       	ldi	r21, 0x00	; 0
  98:	bc 01       	movw	r22, r24
  9a:	cd 01       	movw	r24, r26
  9c:	0e 94 a3 04 	call	0x946	; 0x946 <__mulsi3>
  a0:	dc 01       	movw	r26, r24
  a2:	cb 01       	movw	r24, r22
  a4:	89 83       	std	Y+1, r24	; 0x01
  a6:	9a 83       	std	Y+2, r25	; 0x02
  a8:	ab 83       	std	Y+3, r26	; 0x03
  aa:	bc 83       	std	Y+4, r27	; 0x04
	for(i=0;i<counts;i++)
  ac:	1d 82       	std	Y+5, r1	; 0x05
  ae:	1e 82       	std	Y+6, r1	; 0x06
  b0:	1f 82       	std	Y+7, r1	; 0x07
  b2:	18 86       	std	Y+8, r1	; 0x08
  b4:	0c c0       	rjmp	.+24     	; 0xce <Delay_ms+0x62>
	{
		asm("nop");
  b6:	00 00       	nop
#include "STD_TYPES.h"
void Delay_ms(u32 DelayValue)
{
	u32 i;
	u32 counts=370*DelayValue;
	for(i=0;i<counts;i++)
  b8:	8d 81       	ldd	r24, Y+5	; 0x05
  ba:	9e 81       	ldd	r25, Y+6	; 0x06
  bc:	af 81       	ldd	r26, Y+7	; 0x07
  be:	b8 85       	ldd	r27, Y+8	; 0x08
  c0:	01 96       	adiw	r24, 0x01	; 1
  c2:	a1 1d       	adc	r26, r1
  c4:	b1 1d       	adc	r27, r1
  c6:	8d 83       	std	Y+5, r24	; 0x05
  c8:	9e 83       	std	Y+6, r25	; 0x06
  ca:	af 83       	std	Y+7, r26	; 0x07
  cc:	b8 87       	std	Y+8, r27	; 0x08
  ce:	2d 81       	ldd	r18, Y+5	; 0x05
  d0:	3e 81       	ldd	r19, Y+6	; 0x06
  d2:	4f 81       	ldd	r20, Y+7	; 0x07
  d4:	58 85       	ldd	r21, Y+8	; 0x08
  d6:	89 81       	ldd	r24, Y+1	; 0x01
  d8:	9a 81       	ldd	r25, Y+2	; 0x02
  da:	ab 81       	ldd	r26, Y+3	; 0x03
  dc:	bc 81       	ldd	r27, Y+4	; 0x04
  de:	28 17       	cp	r18, r24
  e0:	39 07       	cpc	r19, r25
  e2:	4a 07       	cpc	r20, r26
  e4:	5b 07       	cpc	r21, r27
  e6:	38 f3       	brcs	.-50     	; 0xb6 <Delay_ms+0x4a>
	{
		asm("nop");
	}	
}
  e8:	2c 96       	adiw	r28, 0x0c	; 12
  ea:	0f b6       	in	r0, 0x3f	; 63
  ec:	f8 94       	cli
  ee:	de bf       	out	0x3e, r29	; 62
  f0:	0f be       	out	0x3f, r0	; 63
  f2:	cd bf       	out	0x3d, r28	; 61
  f4:	cf 91       	pop	r28
  f6:	df 91       	pop	r29
  f8:	08 95       	ret

000000fa <Delay_us>:
void Delay_us(u32 DelayValue)
{
  fa:	df 93       	push	r29
  fc:	cf 93       	push	r28
  fe:	cd b7       	in	r28, 0x3d	; 61
 100:	de b7       	in	r29, 0x3e	; 62
 102:	2c 97       	sbiw	r28, 0x0c	; 12
 104:	0f b6       	in	r0, 0x3f	; 63
 106:	f8 94       	cli
 108:	de bf       	out	0x3e, r29	; 62
 10a:	0f be       	out	0x3f, r0	; 63
 10c:	cd bf       	out	0x3d, r28	; 61
 10e:	69 87       	std	Y+9, r22	; 0x09
 110:	7a 87       	std	Y+10, r23	; 0x0a
 112:	8b 87       	std	Y+11, r24	; 0x0b
 114:	9c 87       	std	Y+12, r25	; 0x0c
	u32 i;
	u32 counts=(((DelayValue-47)*375)/1000);
 116:	89 85       	ldd	r24, Y+9	; 0x09
 118:	9a 85       	ldd	r25, Y+10	; 0x0a
 11a:	ab 85       	ldd	r26, Y+11	; 0x0b
 11c:	bc 85       	ldd	r27, Y+12	; 0x0c
 11e:	27 e7       	ldi	r18, 0x77	; 119
 120:	31 e0       	ldi	r19, 0x01	; 1
 122:	40 e0       	ldi	r20, 0x00	; 0
 124:	50 e0       	ldi	r21, 0x00	; 0
 126:	bc 01       	movw	r22, r24
 128:	cd 01       	movw	r24, r26
 12a:	0e 94 a3 04 	call	0x946	; 0x946 <__mulsi3>
 12e:	dc 01       	movw	r26, r24
 130:	cb 01       	movw	r24, r22
 132:	89 5d       	subi	r24, 0xD9	; 217
 134:	94 44       	sbci	r25, 0x44	; 68
 136:	a0 40       	sbci	r26, 0x00	; 0
 138:	b0 40       	sbci	r27, 0x00	; 0
 13a:	28 ee       	ldi	r18, 0xE8	; 232
 13c:	33 e0       	ldi	r19, 0x03	; 3
 13e:	40 e0       	ldi	r20, 0x00	; 0
 140:	50 e0       	ldi	r21, 0x00	; 0
 142:	bc 01       	movw	r22, r24
 144:	cd 01       	movw	r24, r26
 146:	0e 94 d5 04 	call	0x9aa	; 0x9aa <__udivmodsi4>
 14a:	da 01       	movw	r26, r20
 14c:	c9 01       	movw	r24, r18
 14e:	89 83       	std	Y+1, r24	; 0x01
 150:	9a 83       	std	Y+2, r25	; 0x02
 152:	ab 83       	std	Y+3, r26	; 0x03
 154:	bc 83       	std	Y+4, r27	; 0x04
	for(i=0;i<counts;i++)
 156:	1d 82       	std	Y+5, r1	; 0x05
 158:	1e 82       	std	Y+6, r1	; 0x06
 15a:	1f 82       	std	Y+7, r1	; 0x07
 15c:	18 86       	std	Y+8, r1	; 0x08
 15e:	0c c0       	rjmp	.+24     	; 0x178 <Delay_us+0x7e>
	{
		asm("nop");
 160:	00 00       	nop
}
void Delay_us(u32 DelayValue)
{
	u32 i;
	u32 counts=(((DelayValue-47)*375)/1000);
	for(i=0;i<counts;i++)
 162:	8d 81       	ldd	r24, Y+5	; 0x05
 164:	9e 81       	ldd	r25, Y+6	; 0x06
 166:	af 81       	ldd	r26, Y+7	; 0x07
 168:	b8 85       	ldd	r27, Y+8	; 0x08
 16a:	01 96       	adiw	r24, 0x01	; 1
 16c:	a1 1d       	adc	r26, r1
 16e:	b1 1d       	adc	r27, r1
 170:	8d 83       	std	Y+5, r24	; 0x05
 172:	9e 83       	std	Y+6, r25	; 0x06
 174:	af 83       	std	Y+7, r26	; 0x07
 176:	b8 87       	std	Y+8, r27	; 0x08
 178:	2d 81       	ldd	r18, Y+5	; 0x05
 17a:	3e 81       	ldd	r19, Y+6	; 0x06
 17c:	4f 81       	ldd	r20, Y+7	; 0x07
 17e:	58 85       	ldd	r21, Y+8	; 0x08
 180:	89 81       	ldd	r24, Y+1	; 0x01
 182:	9a 81       	ldd	r25, Y+2	; 0x02
 184:	ab 81       	ldd	r26, Y+3	; 0x03
 186:	bc 81       	ldd	r27, Y+4	; 0x04
 188:	28 17       	cp	r18, r24
 18a:	39 07       	cpc	r19, r25
 18c:	4a 07       	cpc	r20, r26
 18e:	5b 07       	cpc	r21, r27
 190:	38 f3       	brcs	.-50     	; 0x160 <Delay_us+0x66>
	{
		asm("nop");
	}
 192:	2c 96       	adiw	r28, 0x0c	; 12
 194:	0f b6       	in	r0, 0x3f	; 63
 196:	f8 94       	cli
 198:	de bf       	out	0x3e, r29	; 62
 19a:	0f be       	out	0x3f, r0	; 63
 19c:	cd bf       	out	0x3d, r28	; 61
 19e:	cf 91       	pop	r28
 1a0:	df 91       	pop	r29
 1a2:	08 95       	ret

000001a4 <DIO_voidInitialize>:
#include "DIO_config.h"
#include "DIO_priv.h"
#include "DIO_int.h"

void DIO_voidInitialize(void)
{
 1a4:	df 93       	push	r29
 1a6:	cf 93       	push	r28
 1a8:	cd b7       	in	r28, 0x3d	; 61
 1aa:	de b7       	in	r29, 0x3e	; 62
	DDRA = DIO_u8_PORTA_DIRECTION;
 1ac:	ea e3       	ldi	r30, 0x3A	; 58
 1ae:	f0 e0       	ldi	r31, 0x00	; 0
 1b0:	83 e0       	ldi	r24, 0x03	; 3
 1b2:	80 83       	st	Z, r24
	DDRB = DIO_u8_PORTB_DIRECTION;
 1b4:	e7 e3       	ldi	r30, 0x37	; 55
 1b6:	f0 e0       	ldi	r31, 0x00	; 0
 1b8:	83 e0       	ldi	r24, 0x03	; 3
 1ba:	80 83       	st	Z, r24
	DDRC = DIO_u8_PORTC_DIRECTION;
 1bc:	e4 e3       	ldi	r30, 0x34	; 52
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	83 e0       	ldi	r24, 0x03	; 3
 1c2:	80 83       	st	Z, r24
	DDRD = DIO_u8_PORTD_DIRECTION;
 1c4:	e1 e3       	ldi	r30, 0x31	; 49
 1c6:	f0 e0       	ldi	r31, 0x00	; 0
 1c8:	83 e0       	ldi	r24, 0x03	; 3
 1ca:	80 83       	st	Z, r24
}
 1cc:	cf 91       	pop	r28
 1ce:	df 91       	pop	r29
 1d0:	08 95       	ret

000001d2 <DIO_voidSetPinValue>:
void DIO_voidSetPinValue(u8 u8PinIndexCpy,u8 u8PinValueCpy)
{	
 1d2:	df 93       	push	r29
 1d4:	cf 93       	push	r28
 1d6:	00 d0       	rcall	.+0      	; 0x1d8 <DIO_voidSetPinValue+0x6>
 1d8:	cd b7       	in	r28, 0x3d	; 61
 1da:	de b7       	in	r29, 0x3e	; 62
 1dc:	89 83       	std	Y+1, r24	; 0x01
 1de:	6a 83       	std	Y+2, r22	; 0x02
	/*Check if the PIN index in PORTA range */
	if( (u8PinIndexCpy >= DIO_u8_PORTA_START) && (u8PinIndexCpy <= DIO_u8_PORTA_END) )
 1e0:	89 81       	ldd	r24, Y+1	; 0x01
 1e2:	88 30       	cpi	r24, 0x08	; 8
 1e4:	60 f5       	brcc	.+88     	; 0x23e <DIO_voidSetPinValue+0x6c>
	{
		if(u8PinValueCpy == DIO_u8_HIGH)
 1e6:	8a 81       	ldd	r24, Y+2	; 0x02
 1e8:	88 23       	and	r24, r24
 1ea:	a1 f4       	brne	.+40     	; 0x214 <DIO_voidSetPinValue+0x42>
		{
			SET_BIT(PORTA,u8PinIndexCpy);
 1ec:	ab e3       	ldi	r26, 0x3B	; 59
 1ee:	b0 e0       	ldi	r27, 0x00	; 0
 1f0:	eb e3       	ldi	r30, 0x3B	; 59
 1f2:	f0 e0       	ldi	r31, 0x00	; 0
 1f4:	80 81       	ld	r24, Z
 1f6:	48 2f       	mov	r20, r24
 1f8:	89 81       	ldd	r24, Y+1	; 0x01
 1fa:	28 2f       	mov	r18, r24
 1fc:	30 e0       	ldi	r19, 0x00	; 0
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	02 2e       	mov	r0, r18
 204:	02 c0       	rjmp	.+4      	; 0x20a <DIO_voidSetPinValue+0x38>
 206:	88 0f       	add	r24, r24
 208:	99 1f       	adc	r25, r25
 20a:	0a 94       	dec	r0
 20c:	e2 f7       	brpl	.-8      	; 0x206 <DIO_voidSetPinValue+0x34>
 20e:	84 2b       	or	r24, r20
 210:	8c 93       	st	X, r24
 212:	b3 c0       	rjmp	.+358    	; 0x37a <DIO_voidSetPinValue+0x1a8>
		}
		else
		{
			CLR_BIT(PORTA,u8PinIndexCpy);
 214:	ab e3       	ldi	r26, 0x3B	; 59
 216:	b0 e0       	ldi	r27, 0x00	; 0
 218:	eb e3       	ldi	r30, 0x3B	; 59
 21a:	f0 e0       	ldi	r31, 0x00	; 0
 21c:	80 81       	ld	r24, Z
 21e:	48 2f       	mov	r20, r24
 220:	89 81       	ldd	r24, Y+1	; 0x01
 222:	28 2f       	mov	r18, r24
 224:	30 e0       	ldi	r19, 0x00	; 0
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	02 2e       	mov	r0, r18
 22c:	02 c0       	rjmp	.+4      	; 0x232 <DIO_voidSetPinValue+0x60>
 22e:	88 0f       	add	r24, r24
 230:	99 1f       	adc	r25, r25
 232:	0a 94       	dec	r0
 234:	e2 f7       	brpl	.-8      	; 0x22e <DIO_voidSetPinValue+0x5c>
 236:	80 95       	com	r24
 238:	84 23       	and	r24, r20
 23a:	8c 93       	st	X, r24
 23c:	9e c0       	rjmp	.+316    	; 0x37a <DIO_voidSetPinValue+0x1a8>
		}			
	}
	
	/*Check if the PIN index in PORTB range */
	else if( (u8PinIndexCpy >= DIO_u8_PORTB_START) && (u8PinIndexCpy <= DIO_u8_PORTB_END) )
 23e:	89 81       	ldd	r24, Y+1	; 0x01
 240:	88 30       	cpi	r24, 0x08	; 8
 242:	90 f1       	brcs	.+100    	; 0x2a8 <DIO_voidSetPinValue+0xd6>
 244:	89 81       	ldd	r24, Y+1	; 0x01
 246:	80 31       	cpi	r24, 0x10	; 16
 248:	78 f5       	brcc	.+94     	; 0x2a8 <DIO_voidSetPinValue+0xd6>
	{
		u8PinIndexCpy -= DIO_u8_PORTA_SIZE;	
 24a:	89 81       	ldd	r24, Y+1	; 0x01
 24c:	88 50       	subi	r24, 0x08	; 8
 24e:	89 83       	std	Y+1, r24	; 0x01
		if(u8PinValueCpy == DIO_u8_HIGH)
 250:	8a 81       	ldd	r24, Y+2	; 0x02
 252:	88 23       	and	r24, r24
 254:	a1 f4       	brne	.+40     	; 0x27e <DIO_voidSetPinValue+0xac>
		{
			SET_BIT(PORTB,u8PinIndexCpy);
 256:	a8 e3       	ldi	r26, 0x38	; 56
 258:	b0 e0       	ldi	r27, 0x00	; 0
 25a:	e8 e3       	ldi	r30, 0x38	; 56
 25c:	f0 e0       	ldi	r31, 0x00	; 0
 25e:	80 81       	ld	r24, Z
 260:	48 2f       	mov	r20, r24
 262:	89 81       	ldd	r24, Y+1	; 0x01
 264:	28 2f       	mov	r18, r24
 266:	30 e0       	ldi	r19, 0x00	; 0
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	02 2e       	mov	r0, r18
 26e:	02 c0       	rjmp	.+4      	; 0x274 <DIO_voidSetPinValue+0xa2>
 270:	88 0f       	add	r24, r24
 272:	99 1f       	adc	r25, r25
 274:	0a 94       	dec	r0
 276:	e2 f7       	brpl	.-8      	; 0x270 <DIO_voidSetPinValue+0x9e>
 278:	84 2b       	or	r24, r20
 27a:	8c 93       	st	X, r24
 27c:	7e c0       	rjmp	.+252    	; 0x37a <DIO_voidSetPinValue+0x1a8>
		}
		else
		{
			CLR_BIT(PORTB,u8PinIndexCpy);
 27e:	a8 e3       	ldi	r26, 0x38	; 56
 280:	b0 e0       	ldi	r27, 0x00	; 0
 282:	e8 e3       	ldi	r30, 0x38	; 56
 284:	f0 e0       	ldi	r31, 0x00	; 0
 286:	80 81       	ld	r24, Z
 288:	48 2f       	mov	r20, r24
 28a:	89 81       	ldd	r24, Y+1	; 0x01
 28c:	28 2f       	mov	r18, r24
 28e:	30 e0       	ldi	r19, 0x00	; 0
 290:	81 e0       	ldi	r24, 0x01	; 1
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	02 2e       	mov	r0, r18
 296:	02 c0       	rjmp	.+4      	; 0x29c <DIO_voidSetPinValue+0xca>
 298:	88 0f       	add	r24, r24
 29a:	99 1f       	adc	r25, r25
 29c:	0a 94       	dec	r0
 29e:	e2 f7       	brpl	.-8      	; 0x298 <DIO_voidSetPinValue+0xc6>
 2a0:	80 95       	com	r24
 2a2:	84 23       	and	r24, r20
 2a4:	8c 93       	st	X, r24
 2a6:	69 c0       	rjmp	.+210    	; 0x37a <DIO_voidSetPinValue+0x1a8>
		}			
	}
	
	/*Check if the PIN index in PORTC range */
	else if( (u8PinIndexCpy >= DIO_u8_PORTC_START) && (u8PinIndexCpy <= DIO_u8_PORTC_END) )
 2a8:	89 81       	ldd	r24, Y+1	; 0x01
 2aa:	80 31       	cpi	r24, 0x10	; 16
 2ac:	90 f1       	brcs	.+100    	; 0x312 <DIO_voidSetPinValue+0x140>
 2ae:	89 81       	ldd	r24, Y+1	; 0x01
 2b0:	88 31       	cpi	r24, 0x18	; 24
 2b2:	78 f5       	brcc	.+94     	; 0x312 <DIO_voidSetPinValue+0x140>
	{
		u8PinIndexCpy -= (DIO_u8_PORTA_SIZE + DIO_u8_PORTB_SIZE);	
 2b4:	89 81       	ldd	r24, Y+1	; 0x01
 2b6:	80 51       	subi	r24, 0x10	; 16
 2b8:	89 83       	std	Y+1, r24	; 0x01
		if(u8PinValueCpy == DIO_u8_HIGH)
 2ba:	8a 81       	ldd	r24, Y+2	; 0x02
 2bc:	88 23       	and	r24, r24
 2be:	a1 f4       	brne	.+40     	; 0x2e8 <DIO_voidSetPinValue+0x116>
		{
			SET_BIT(PORTC,u8PinIndexCpy);
 2c0:	a5 e3       	ldi	r26, 0x35	; 53
 2c2:	b0 e0       	ldi	r27, 0x00	; 0
 2c4:	e5 e3       	ldi	r30, 0x35	; 53
 2c6:	f0 e0       	ldi	r31, 0x00	; 0
 2c8:	80 81       	ld	r24, Z
 2ca:	48 2f       	mov	r20, r24
 2cc:	89 81       	ldd	r24, Y+1	; 0x01
 2ce:	28 2f       	mov	r18, r24
 2d0:	30 e0       	ldi	r19, 0x00	; 0
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	02 2e       	mov	r0, r18
 2d8:	02 c0       	rjmp	.+4      	; 0x2de <DIO_voidSetPinValue+0x10c>
 2da:	88 0f       	add	r24, r24
 2dc:	99 1f       	adc	r25, r25
 2de:	0a 94       	dec	r0
 2e0:	e2 f7       	brpl	.-8      	; 0x2da <DIO_voidSetPinValue+0x108>
 2e2:	84 2b       	or	r24, r20
 2e4:	8c 93       	st	X, r24
 2e6:	49 c0       	rjmp	.+146    	; 0x37a <DIO_voidSetPinValue+0x1a8>
		}
		else
		{
			CLR_BIT(PORTC,u8PinIndexCpy);
 2e8:	a5 e3       	ldi	r26, 0x35	; 53
 2ea:	b0 e0       	ldi	r27, 0x00	; 0
 2ec:	e5 e3       	ldi	r30, 0x35	; 53
 2ee:	f0 e0       	ldi	r31, 0x00	; 0
 2f0:	80 81       	ld	r24, Z
 2f2:	48 2f       	mov	r20, r24
 2f4:	89 81       	ldd	r24, Y+1	; 0x01
 2f6:	28 2f       	mov	r18, r24
 2f8:	30 e0       	ldi	r19, 0x00	; 0
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	02 2e       	mov	r0, r18
 300:	02 c0       	rjmp	.+4      	; 0x306 <DIO_voidSetPinValue+0x134>
 302:	88 0f       	add	r24, r24
 304:	99 1f       	adc	r25, r25
 306:	0a 94       	dec	r0
 308:	e2 f7       	brpl	.-8      	; 0x302 <DIO_voidSetPinValue+0x130>
 30a:	80 95       	com	r24
 30c:	84 23       	and	r24, r20
 30e:	8c 93       	st	X, r24
 310:	34 c0       	rjmp	.+104    	; 0x37a <DIO_voidSetPinValue+0x1a8>
		}			
	}
	
	/*Check if the PIN index in PORTD range */
	else if( (u8PinIndexCpy >= DIO_u8_PORTD_START) && (u8PinIndexCpy <= DIO_u8_PORTD_END) )
 312:	89 81       	ldd	r24, Y+1	; 0x01
 314:	88 31       	cpi	r24, 0x18	; 24
 316:	88 f1       	brcs	.+98     	; 0x37a <DIO_voidSetPinValue+0x1a8>
 318:	89 81       	ldd	r24, Y+1	; 0x01
 31a:	80 32       	cpi	r24, 0x20	; 32
 31c:	70 f5       	brcc	.+92     	; 0x37a <DIO_voidSetPinValue+0x1a8>
	{
		u8PinIndexCpy -= (DIO_u8_PORTA_SIZE + DIO_u8_PORTB_SIZE + DIO_u8_PORTC_SIZE);	
 31e:	89 81       	ldd	r24, Y+1	; 0x01
 320:	88 51       	subi	r24, 0x18	; 24
 322:	89 83       	std	Y+1, r24	; 0x01
		if(u8PinValueCpy == DIO_u8_HIGH)
 324:	8a 81       	ldd	r24, Y+2	; 0x02
 326:	88 23       	and	r24, r24
 328:	a1 f4       	brne	.+40     	; 0x352 <DIO_voidSetPinValue+0x180>
		{
			SET_BIT(PORTD,u8PinIndexCpy);
 32a:	a2 e3       	ldi	r26, 0x32	; 50
 32c:	b0 e0       	ldi	r27, 0x00	; 0
 32e:	e2 e3       	ldi	r30, 0x32	; 50
 330:	f0 e0       	ldi	r31, 0x00	; 0
 332:	80 81       	ld	r24, Z
 334:	48 2f       	mov	r20, r24
 336:	89 81       	ldd	r24, Y+1	; 0x01
 338:	28 2f       	mov	r18, r24
 33a:	30 e0       	ldi	r19, 0x00	; 0
 33c:	81 e0       	ldi	r24, 0x01	; 1
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	02 2e       	mov	r0, r18
 342:	02 c0       	rjmp	.+4      	; 0x348 <DIO_voidSetPinValue+0x176>
 344:	88 0f       	add	r24, r24
 346:	99 1f       	adc	r25, r25
 348:	0a 94       	dec	r0
 34a:	e2 f7       	brpl	.-8      	; 0x344 <DIO_voidSetPinValue+0x172>
 34c:	84 2b       	or	r24, r20
 34e:	8c 93       	st	X, r24
 350:	14 c0       	rjmp	.+40     	; 0x37a <DIO_voidSetPinValue+0x1a8>
		}
		else
		{
			CLR_BIT(PORTD,u8PinIndexCpy);
 352:	a2 e3       	ldi	r26, 0x32	; 50
 354:	b0 e0       	ldi	r27, 0x00	; 0
 356:	e2 e3       	ldi	r30, 0x32	; 50
 358:	f0 e0       	ldi	r31, 0x00	; 0
 35a:	80 81       	ld	r24, Z
 35c:	48 2f       	mov	r20, r24
 35e:	89 81       	ldd	r24, Y+1	; 0x01
 360:	28 2f       	mov	r18, r24
 362:	30 e0       	ldi	r19, 0x00	; 0
 364:	81 e0       	ldi	r24, 0x01	; 1
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	02 2e       	mov	r0, r18
 36a:	02 c0       	rjmp	.+4      	; 0x370 <DIO_voidSetPinValue+0x19e>
 36c:	88 0f       	add	r24, r24
 36e:	99 1f       	adc	r25, r25
 370:	0a 94       	dec	r0
 372:	e2 f7       	brpl	.-8      	; 0x36c <DIO_voidSetPinValue+0x19a>
 374:	80 95       	com	r24
 376:	84 23       	and	r24, r20
 378:	8c 93       	st	X, r24
		}			
	}
}
 37a:	0f 90       	pop	r0
 37c:	0f 90       	pop	r0
 37e:	cf 91       	pop	r28
 380:	df 91       	pop	r29
 382:	08 95       	ret

00000384 <LEDS_voidSetLedOn>:

#include "LEDS_priv.h"
#include "LEDS_config.h"
#include "LEDS_int.h"
void LEDS_voidSetLedOn(u8 u8LedPinCPY)
{
 384:	df 93       	push	r29
 386:	cf 93       	push	r28
 388:	00 d0       	rcall	.+0      	; 0x38a <LEDS_voidSetLedOn+0x6>
 38a:	0f 92       	push	r0
 38c:	cd b7       	in	r28, 0x3d	; 61
 38e:	de b7       	in	r29, 0x3e	; 62
 390:	89 83       	std	Y+1, r24	; 0x01

	switch(u8LedPinCPY)
 392:	89 81       	ldd	r24, Y+1	; 0x01
 394:	28 2f       	mov	r18, r24
 396:	30 e0       	ldi	r19, 0x00	; 0
 398:	3b 83       	std	Y+3, r19	; 0x03
 39a:	2a 83       	std	Y+2, r18	; 0x02
 39c:	8a 81       	ldd	r24, Y+2	; 0x02
 39e:	9b 81       	ldd	r25, Y+3	; 0x03
 3a0:	83 30       	cpi	r24, 0x03	; 3
 3a2:	91 05       	cpc	r25, r1
 3a4:	c1 f1       	breq	.+112    	; 0x416 <LEDS_voidSetLedOn+0x92>
 3a6:	2a 81       	ldd	r18, Y+2	; 0x02
 3a8:	3b 81       	ldd	r19, Y+3	; 0x03
 3aa:	24 30       	cpi	r18, 0x04	; 4
 3ac:	31 05       	cpc	r19, r1
 3ae:	7c f4       	brge	.+30     	; 0x3ce <LEDS_voidSetLedOn+0x4a>
 3b0:	8a 81       	ldd	r24, Y+2	; 0x02
 3b2:	9b 81       	ldd	r25, Y+3	; 0x03
 3b4:	81 30       	cpi	r24, 0x01	; 1
 3b6:	91 05       	cpc	r25, r1
 3b8:	21 f1       	breq	.+72     	; 0x402 <LEDS_voidSetLedOn+0x7e>
 3ba:	2a 81       	ldd	r18, Y+2	; 0x02
 3bc:	3b 81       	ldd	r19, Y+3	; 0x03
 3be:	22 30       	cpi	r18, 0x02	; 2
 3c0:	31 05       	cpc	r19, r1
 3c2:	24 f5       	brge	.+72     	; 0x40c <LEDS_voidSetLedOn+0x88>
 3c4:	8a 81       	ldd	r24, Y+2	; 0x02
 3c6:	9b 81       	ldd	r25, Y+3	; 0x03
 3c8:	00 97       	sbiw	r24, 0x00	; 0
 3ca:	b1 f0       	breq	.+44     	; 0x3f8 <LEDS_voidSetLedOn+0x74>
 3cc:	3c c0       	rjmp	.+120    	; 0x446 <LEDS_voidSetLedOn+0xc2>
 3ce:	2a 81       	ldd	r18, Y+2	; 0x02
 3d0:	3b 81       	ldd	r19, Y+3	; 0x03
 3d2:	25 30       	cpi	r18, 0x05	; 5
 3d4:	31 05       	cpc	r19, r1
 3d6:	49 f1       	breq	.+82     	; 0x42a <LEDS_voidSetLedOn+0xa6>
 3d8:	8a 81       	ldd	r24, Y+2	; 0x02
 3da:	9b 81       	ldd	r25, Y+3	; 0x03
 3dc:	85 30       	cpi	r24, 0x05	; 5
 3de:	91 05       	cpc	r25, r1
 3e0:	fc f0       	brlt	.+62     	; 0x420 <LEDS_voidSetLedOn+0x9c>
 3e2:	2a 81       	ldd	r18, Y+2	; 0x02
 3e4:	3b 81       	ldd	r19, Y+3	; 0x03
 3e6:	26 30       	cpi	r18, 0x06	; 6
 3e8:	31 05       	cpc	r19, r1
 3ea:	21 f1       	breq	.+72     	; 0x434 <LEDS_voidSetLedOn+0xb0>
 3ec:	8a 81       	ldd	r24, Y+2	; 0x02
 3ee:	9b 81       	ldd	r25, Y+3	; 0x03
 3f0:	87 30       	cpi	r24, 0x07	; 7
 3f2:	91 05       	cpc	r25, r1
 3f4:	21 f1       	breq	.+72     	; 0x43e <LEDS_voidSetLedOn+0xba>
 3f6:	27 c0       	rjmp	.+78     	; 0x446 <LEDS_voidSetLedOn+0xc2>
	{
	case LEDS_u8_LED0:
#if LEDS_u8_MODE0 == LEDS_u8_NORMAL
		DIO_voidSetPinValue(LEDS_u8_PIN0,DIO_u8_HIGH);
 3f8:	80 e0       	ldi	r24, 0x00	; 0
 3fa:	60 e0       	ldi	r22, 0x00	; 0
 3fc:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <DIO_voidSetPinValue>
 400:	22 c0       	rjmp	.+68     	; 0x446 <LEDS_voidSetLedOn+0xc2>
		break;
	case LEDS_u8_LED1:
#if LEDS_u8_MODE1 == LEDS_u8_NORMAL
		DIO_voidSetPinValue(LEDS_u8_PIN1,DIO_u8_HIGH);
#else
		DIO_voidSetPinValue(LEDS_u8_PIN1,DIO_u8_LOW);
 402:	81 e0       	ldi	r24, 0x01	; 1
 404:	61 e0       	ldi	r22, 0x01	; 1
 406:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <DIO_voidSetPinValue>
 40a:	1d c0       	rjmp	.+58     	; 0x446 <LEDS_voidSetLedOn+0xc2>
#endif
		break;
	case LEDS_u8_LED2:
#if LEDS_u8_MODE2 == LEDS_u8_NORMAL
		DIO_voidSetPinValue(LEDS_u8_PIN2,DIO_u8_HIGH);
 40c:	88 e0       	ldi	r24, 0x08	; 8
 40e:	60 e0       	ldi	r22, 0x00	; 0
 410:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <DIO_voidSetPinValue>
 414:	18 c0       	rjmp	.+48     	; 0x446 <LEDS_voidSetLedOn+0xc2>
		break;
	case LEDS_u8_LED3:
#if LEDS_u8_MODE3 == LEDS_u8_NORMAL
		DIO_voidSetPinValue(LEDS_u8_PIN3,DIO_u8_HIGH);
#else
		DIO_voidSetPinValue(LEDS_u8_PIN3,DIO_u8_LOW);
 416:	89 e0       	ldi	r24, 0x09	; 9
 418:	61 e0       	ldi	r22, 0x01	; 1
 41a:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <DIO_voidSetPinValue>
 41e:	13 c0       	rjmp	.+38     	; 0x446 <LEDS_voidSetLedOn+0xc2>
#endif
		break;
	case LEDS_u8_LED4:
#if LEDS_u8_MODE4 == LEDS_u8_NORMAL
		DIO_voidSetPinValue(LEDS_u8_PIN4,DIO_u8_HIGH);
 420:	80 e1       	ldi	r24, 0x10	; 16
 422:	60 e0       	ldi	r22, 0x00	; 0
 424:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <DIO_voidSetPinValue>
 428:	0e c0       	rjmp	.+28     	; 0x446 <LEDS_voidSetLedOn+0xc2>
		break;
	case LEDS_u8_LED5:
#if LEDS_u8_MODE5 == LEDS_u8_NORMAL
		DIO_voidSetPinValue(LEDS_u8_PIN5,DIO_u8_HIGH);
#else
		DIO_voidSetPinValue(LEDS_u8_PIN5,DIO_u8_LOW);
 42a:	81 e1       	ldi	r24, 0x11	; 17
 42c:	61 e0       	ldi	r22, 0x01	; 1
 42e:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <DIO_voidSetPinValue>
 432:	09 c0       	rjmp	.+18     	; 0x446 <LEDS_voidSetLedOn+0xc2>
#endif
		break;
	case LEDS_u8_LED6:
#if LEDS_u8_MODE6 == LEDS_u8_NORMAL
		DIO_voidSetPinValue(LEDS_u8_PIN6,DIO_u8_HIGH);
 434:	88 e1       	ldi	r24, 0x18	; 24
 436:	60 e0       	ldi	r22, 0x00	; 0
 438:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <DIO_voidSetPinValue>
 43c:	04 c0       	rjmp	.+8      	; 0x446 <LEDS_voidSetLedOn+0xc2>
		break;
	case LEDS_u8_LED7:
#if LEDS_u8_MODE7 == LEDS_u8_NORMAL
		DIO_voidSetPinValue(LEDS_u8_PIN7,DIO_u8_HIGH);
#else
		DIO_voidSetPinValue(LEDS_u8_PIN7,DIO_u8_LOW);
 43e:	89 e1       	ldi	r24, 0x19	; 25
 440:	61 e0       	ldi	r22, 0x01	; 1
 442:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <DIO_voidSetPinValue>
#endif
		break;
	}

}
 446:	0f 90       	pop	r0
 448:	0f 90       	pop	r0
 44a:	0f 90       	pop	r0
 44c:	cf 91       	pop	r28
 44e:	df 91       	pop	r29
 450:	08 95       	ret

00000452 <LEDS_voidSetLedOff>:
void LEDS_voidSetLedOff(u8 u8LedPinCPY)
{
 452:	df 93       	push	r29
 454:	cf 93       	push	r28
 456:	00 d0       	rcall	.+0      	; 0x458 <LEDS_voidSetLedOff+0x6>
 458:	0f 92       	push	r0
 45a:	cd b7       	in	r28, 0x3d	; 61
 45c:	de b7       	in	r29, 0x3e	; 62
 45e:	89 83       	std	Y+1, r24	; 0x01
	switch(u8LedPinCPY)
 460:	89 81       	ldd	r24, Y+1	; 0x01
 462:	28 2f       	mov	r18, r24
 464:	30 e0       	ldi	r19, 0x00	; 0
 466:	3b 83       	std	Y+3, r19	; 0x03
 468:	2a 83       	std	Y+2, r18	; 0x02
 46a:	8a 81       	ldd	r24, Y+2	; 0x02
 46c:	9b 81       	ldd	r25, Y+3	; 0x03
 46e:	83 30       	cpi	r24, 0x03	; 3
 470:	91 05       	cpc	r25, r1
 472:	c1 f1       	breq	.+112    	; 0x4e4 <LEDS_voidSetLedOff+0x92>
 474:	2a 81       	ldd	r18, Y+2	; 0x02
 476:	3b 81       	ldd	r19, Y+3	; 0x03
 478:	24 30       	cpi	r18, 0x04	; 4
 47a:	31 05       	cpc	r19, r1
 47c:	7c f4       	brge	.+30     	; 0x49c <LEDS_voidSetLedOff+0x4a>
 47e:	8a 81       	ldd	r24, Y+2	; 0x02
 480:	9b 81       	ldd	r25, Y+3	; 0x03
 482:	81 30       	cpi	r24, 0x01	; 1
 484:	91 05       	cpc	r25, r1
 486:	21 f1       	breq	.+72     	; 0x4d0 <LEDS_voidSetLedOff+0x7e>
 488:	2a 81       	ldd	r18, Y+2	; 0x02
 48a:	3b 81       	ldd	r19, Y+3	; 0x03
 48c:	22 30       	cpi	r18, 0x02	; 2
 48e:	31 05       	cpc	r19, r1
 490:	24 f5       	brge	.+72     	; 0x4da <LEDS_voidSetLedOff+0x88>
 492:	8a 81       	ldd	r24, Y+2	; 0x02
 494:	9b 81       	ldd	r25, Y+3	; 0x03
 496:	00 97       	sbiw	r24, 0x00	; 0
 498:	b1 f0       	breq	.+44     	; 0x4c6 <LEDS_voidSetLedOff+0x74>
 49a:	3c c0       	rjmp	.+120    	; 0x514 <LEDS_voidSetLedOff+0xc2>
 49c:	2a 81       	ldd	r18, Y+2	; 0x02
 49e:	3b 81       	ldd	r19, Y+3	; 0x03
 4a0:	25 30       	cpi	r18, 0x05	; 5
 4a2:	31 05       	cpc	r19, r1
 4a4:	49 f1       	breq	.+82     	; 0x4f8 <LEDS_voidSetLedOff+0xa6>
 4a6:	8a 81       	ldd	r24, Y+2	; 0x02
 4a8:	9b 81       	ldd	r25, Y+3	; 0x03
 4aa:	85 30       	cpi	r24, 0x05	; 5
 4ac:	91 05       	cpc	r25, r1
 4ae:	fc f0       	brlt	.+62     	; 0x4ee <LEDS_voidSetLedOff+0x9c>
 4b0:	2a 81       	ldd	r18, Y+2	; 0x02
 4b2:	3b 81       	ldd	r19, Y+3	; 0x03
 4b4:	26 30       	cpi	r18, 0x06	; 6
 4b6:	31 05       	cpc	r19, r1
 4b8:	21 f1       	breq	.+72     	; 0x502 <LEDS_voidSetLedOff+0xb0>
 4ba:	8a 81       	ldd	r24, Y+2	; 0x02
 4bc:	9b 81       	ldd	r25, Y+3	; 0x03
 4be:	87 30       	cpi	r24, 0x07	; 7
 4c0:	91 05       	cpc	r25, r1
 4c2:	21 f1       	breq	.+72     	; 0x50c <LEDS_voidSetLedOff+0xba>
 4c4:	27 c0       	rjmp	.+78     	; 0x514 <LEDS_voidSetLedOff+0xc2>
	{
	case LEDS_u8_LED0:
#if LEDS_u8_MODE0 == LEDS_u8_NORMAL
		DIO_voidSetPinValue(LEDS_u8_PIN0,DIO_u8_LOW);
 4c6:	80 e0       	ldi	r24, 0x00	; 0
 4c8:	61 e0       	ldi	r22, 0x01	; 1
 4ca:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <DIO_voidSetPinValue>
 4ce:	22 c0       	rjmp	.+68     	; 0x514 <LEDS_voidSetLedOff+0xc2>
		break;
	case LEDS_u8_LED1:
#if LEDS_u8_MODE1 == LEDS_u8_NORMAL
		DIO_voidSetPinValue(LEDS_u8_PIN1,DIO_u8_LOW);
#else
		DIO_voidSetPinValue(LEDS_u8_PIN1,DIO_u8_HIGH);
 4d0:	81 e0       	ldi	r24, 0x01	; 1
 4d2:	60 e0       	ldi	r22, 0x00	; 0
 4d4:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <DIO_voidSetPinValue>
 4d8:	1d c0       	rjmp	.+58     	; 0x514 <LEDS_voidSetLedOff+0xc2>
#endif
		break;
	case LEDS_u8_LED2:
#if LEDS_u8_MODE2 == LEDS_u8_NORMAL
		DIO_voidSetPinValue(LEDS_u8_PIN2,DIO_u8_LOW);
 4da:	88 e0       	ldi	r24, 0x08	; 8
 4dc:	61 e0       	ldi	r22, 0x01	; 1
 4de:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <DIO_voidSetPinValue>
 4e2:	18 c0       	rjmp	.+48     	; 0x514 <LEDS_voidSetLedOff+0xc2>
		break;
	case LEDS_u8_LED3:
#if LEDS_u8_MODE3 == LEDS_u8_NORMAL
		DIO_voidSetPinValue(LEDS_u8_PIN3,DIO_u8_LOW);
#else
		DIO_voidSetPinValue(LEDS_u8_PIN3,DIO_u8_HIGH);
 4e4:	89 e0       	ldi	r24, 0x09	; 9
 4e6:	60 e0       	ldi	r22, 0x00	; 0
 4e8:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <DIO_voidSetPinValue>
 4ec:	13 c0       	rjmp	.+38     	; 0x514 <LEDS_voidSetLedOff+0xc2>
#endif
		break;
	case LEDS_u8_LED4:
#if LEDS_u8_MODE4 == LEDS_u8_NORMAL
		DIO_voidSetPinValue(LEDS_u8_PIN4,DIO_u8_LOW);
 4ee:	80 e1       	ldi	r24, 0x10	; 16
 4f0:	61 e0       	ldi	r22, 0x01	; 1
 4f2:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <DIO_voidSetPinValue>
 4f6:	0e c0       	rjmp	.+28     	; 0x514 <LEDS_voidSetLedOff+0xc2>
		break;
	case LEDS_u8_LED5:
#if LEDS_u8_MODE5 == LEDS_u8_NORMAL
		DIO_voidSetPinValue(LEDS_u8_PIN5,DIO_u8_LOW);
#else
		DIO_voidSetPinValue(LEDS_u8_PIN5,DIO_u8_HIGH);
 4f8:	81 e1       	ldi	r24, 0x11	; 17
 4fa:	60 e0       	ldi	r22, 0x00	; 0
 4fc:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <DIO_voidSetPinValue>
 500:	09 c0       	rjmp	.+18     	; 0x514 <LEDS_voidSetLedOff+0xc2>
#endif
		break;
	case LEDS_u8_LED6:
#if LEDS_u8_MODE6 == LEDS_u8_NORMAL
		DIO_voidSetPinValue(LEDS_u8_PIN6,DIO_u8_LOW);
 502:	88 e1       	ldi	r24, 0x18	; 24
 504:	61 e0       	ldi	r22, 0x01	; 1
 506:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <DIO_voidSetPinValue>
 50a:	04 c0       	rjmp	.+8      	; 0x514 <LEDS_voidSetLedOff+0xc2>
		break;
	case LEDS_u8_LED7:
#if LEDS_u8_MODE7 == LEDS_u8_NORMAL
		DIO_voidSetPinValue(LEDS_u8_PIN7,DIO_u8_LOW);
#else
		DIO_voidSetPinValue(LEDS_u8_PIN7,DIO_u8_HIGH);
 50c:	89 e1       	ldi	r24, 0x19	; 25
 50e:	60 e0       	ldi	r22, 0x00	; 0
 510:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <DIO_voidSetPinValue>
#endif
		break;
	}
}
 514:	0f 90       	pop	r0
 516:	0f 90       	pop	r0
 518:	0f 90       	pop	r0
 51a:	cf 91       	pop	r28
 51c:	df 91       	pop	r29
 51e:	08 95       	ret

00000520 <main>:
void voidAnimationOne(void);
void voidAnimationTwo(void);
void voidAnimationThree(void);
void voidAnimationFour(void);
int main(void)
{
 520:	df 93       	push	r29
 522:	cf 93       	push	r28
 524:	cd b7       	in	r28, 0x3d	; 61
 526:	de b7       	in	r29, 0x3e	; 62

	DIO_voidInitialize();
 528:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <DIO_voidInitialize>
	LEDS_voidSetLedOff(LEDS_u8_LED0);
 52c:	80 e0       	ldi	r24, 0x00	; 0
 52e:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
	LEDS_voidSetLedOff(LEDS_u8_LED1);
 532:	81 e0       	ldi	r24, 0x01	; 1
 534:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
	LEDS_voidSetLedOff(LEDS_u8_LED2);
 538:	82 e0       	ldi	r24, 0x02	; 2
 53a:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
	LEDS_voidSetLedOff(LEDS_u8_LED3);
 53e:	83 e0       	ldi	r24, 0x03	; 3
 540:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
	LEDS_voidSetLedOff(LEDS_u8_LED4);
 544:	84 e0       	ldi	r24, 0x04	; 4
 546:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
	LEDS_voidSetLedOff(LEDS_u8_LED5);
 54a:	85 e0       	ldi	r24, 0x05	; 5
 54c:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
	LEDS_voidSetLedOff(LEDS_u8_LED6);
 550:	86 e0       	ldi	r24, 0x06	; 6
 552:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
	LEDS_voidSetLedOff(LEDS_u8_LED7);
 556:	87 e0       	ldi	r24, 0x07	; 7
 558:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
	while(1)
	{

		voidAnimationOne();
 55c:	0e 94 bd 02 	call	0x57a	; 0x57a <voidAnimationOne>

		voidAnimationTwo();
 560:	0e 94 8e 03 	call	0x71c	; 0x71c <voidAnimationTwo>
		voidAnimationTwo();
 564:	0e 94 8e 03 	call	0x71c	; 0x71c <voidAnimationTwo>

		voidAnimationThree();
 568:	0e 94 cc 03 	call	0x798	; 0x798 <voidAnimationThree>
		voidAnimationThree();
 56c:	0e 94 cc 03 	call	0x798	; 0x798 <voidAnimationThree>
		voidAnimationThree();
 570:	0e 94 cc 03 	call	0x798	; 0x798 <voidAnimationThree>
		//voidAnimationThree();
		voidAnimationFour();
 574:	0e 94 0f 04 	call	0x81e	; 0x81e <voidAnimationFour>
 578:	f1 cf       	rjmp	.-30     	; 0x55c <main+0x3c>

0000057a <voidAnimationOne>:
	}
return 0;
}
void voidAnimationOne(void)
{
 57a:	df 93       	push	r29
 57c:	cf 93       	push	r28
 57e:	00 d0       	rcall	.+0      	; 0x580 <voidAnimationOne+0x6>
 580:	cd b7       	in	r28, 0x3d	; 61
 582:	de b7       	in	r29, 0x3e	; 62

	for(u8 u8IndexLoc=0;u8IndexLoc< LEDS_u8_NUMBEROFLEDS;u8IndexLoc++)
 584:	1a 82       	std	Y+2, r1	; 0x02
 586:	5d c0       	rjmp	.+186    	; 0x642 <voidAnimationOne+0xc8>
	{
		LEDS_voidSetLedOn(u8IndexLoc%LEDS_u8_NUMBEROFLEDS);
 588:	8a 81       	ldd	r24, Y+2	; 0x02
 58a:	87 70       	andi	r24, 0x07	; 7
 58c:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		LEDS_voidSetLedOff((u8IndexLoc+u8_INDEX1)%LEDS_u8_NUMBEROFLEDS);
 590:	8a 81       	ldd	r24, Y+2	; 0x02
 592:	88 2f       	mov	r24, r24
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	01 96       	adiw	r24, 0x01	; 1
 598:	28 e0       	ldi	r18, 0x08	; 8
 59a:	30 e0       	ldi	r19, 0x00	; 0
 59c:	b9 01       	movw	r22, r18
 59e:	0e 94 c2 04 	call	0x984	; 0x984 <__divmodhi4>
 5a2:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff((u8IndexLoc+u8_INDEX2)%LEDS_u8_NUMBEROFLEDS);
 5a6:	8a 81       	ldd	r24, Y+2	; 0x02
 5a8:	88 2f       	mov	r24, r24
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	02 96       	adiw	r24, 0x02	; 2
 5ae:	28 e0       	ldi	r18, 0x08	; 8
 5b0:	30 e0       	ldi	r19, 0x00	; 0
 5b2:	b9 01       	movw	r22, r18
 5b4:	0e 94 c2 04 	call	0x984	; 0x984 <__divmodhi4>
 5b8:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff((u8IndexLoc+u8_INDEX3)%LEDS_u8_NUMBEROFLEDS);
 5bc:	8a 81       	ldd	r24, Y+2	; 0x02
 5be:	88 2f       	mov	r24, r24
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	03 96       	adiw	r24, 0x03	; 3
 5c4:	28 e0       	ldi	r18, 0x08	; 8
 5c6:	30 e0       	ldi	r19, 0x00	; 0
 5c8:	b9 01       	movw	r22, r18
 5ca:	0e 94 c2 04 	call	0x984	; 0x984 <__divmodhi4>
 5ce:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff((u8IndexLoc+u8_INDEX4)%LEDS_u8_NUMBEROFLEDS);
 5d2:	8a 81       	ldd	r24, Y+2	; 0x02
 5d4:	88 2f       	mov	r24, r24
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	04 96       	adiw	r24, 0x04	; 4
 5da:	28 e0       	ldi	r18, 0x08	; 8
 5dc:	30 e0       	ldi	r19, 0x00	; 0
 5de:	b9 01       	movw	r22, r18
 5e0:	0e 94 c2 04 	call	0x984	; 0x984 <__divmodhi4>
 5e4:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff((u8IndexLoc+u8_INDEX5)%LEDS_u8_NUMBEROFLEDS);
 5e8:	8a 81       	ldd	r24, Y+2	; 0x02
 5ea:	88 2f       	mov	r24, r24
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	05 96       	adiw	r24, 0x05	; 5
 5f0:	28 e0       	ldi	r18, 0x08	; 8
 5f2:	30 e0       	ldi	r19, 0x00	; 0
 5f4:	b9 01       	movw	r22, r18
 5f6:	0e 94 c2 04 	call	0x984	; 0x984 <__divmodhi4>
 5fa:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff((u8IndexLoc+u8_INDEX6)%LEDS_u8_NUMBEROFLEDS);
 5fe:	8a 81       	ldd	r24, Y+2	; 0x02
 600:	88 2f       	mov	r24, r24
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	06 96       	adiw	r24, 0x06	; 6
 606:	28 e0       	ldi	r18, 0x08	; 8
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	b9 01       	movw	r22, r18
 60c:	0e 94 c2 04 	call	0x984	; 0x984 <__divmodhi4>
 610:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff((u8IndexLoc+u8_INDEX7)%LEDS_u8_NUMBEROFLEDS);
 614:	8a 81       	ldd	r24, Y+2	; 0x02
 616:	88 2f       	mov	r24, r24
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	07 96       	adiw	r24, 0x07	; 7
 61c:	28 e0       	ldi	r18, 0x08	; 8
 61e:	30 e0       	ldi	r19, 0x00	; 0
 620:	b9 01       	movw	r22, r18
 622:	0e 94 c2 04 	call	0x984	; 0x984 <__divmodhi4>
 626:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		if(u8IndexLoc!=u8_INDEX7)
 62a:	8a 81       	ldd	r24, Y+2	; 0x02
 62c:	87 30       	cpi	r24, 0x07	; 7
 62e:	31 f0       	breq	.+12     	; 0x63c <voidAnimationOne+0xc2>
		Delay_ms(300);
 630:	6c e2       	ldi	r22, 0x2C	; 44
 632:	71 e0       	ldi	r23, 0x01	; 1
 634:	80 e0       	ldi	r24, 0x00	; 0
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	0e 94 36 00 	call	0x6c	; 0x6c <Delay_ms>
return 0;
}
void voidAnimationOne(void)
{

	for(u8 u8IndexLoc=0;u8IndexLoc< LEDS_u8_NUMBEROFLEDS;u8IndexLoc++)
 63c:	8a 81       	ldd	r24, Y+2	; 0x02
 63e:	8f 5f       	subi	r24, 0xFF	; 255
 640:	8a 83       	std	Y+2, r24	; 0x02
 642:	8a 81       	ldd	r24, Y+2	; 0x02
 644:	88 30       	cpi	r24, 0x08	; 8
 646:	08 f4       	brcc	.+2      	; 0x64a <voidAnimationOne+0xd0>
 648:	9f cf       	rjmp	.-194    	; 0x588 <voidAnimationOne+0xe>
		LEDS_voidSetLedOff((u8IndexLoc+u8_INDEX7)%LEDS_u8_NUMBEROFLEDS);
		if(u8IndexLoc!=u8_INDEX7)
		Delay_ms(300);
	}

	for(u8 u8IndexLoc=LEDS_u8_NUMBEROFLEDS;u8IndexLoc>u8_INDEX0;u8IndexLoc--)
 64a:	88 e0       	ldi	r24, 0x08	; 8
 64c:	89 83       	std	Y+1, r24	; 0x01
 64e:	5d c0       	rjmp	.+186    	; 0x70a <voidAnimationOne+0x190>
	{
		LEDS_voidSetLedOn((u8IndexLoc-u8_INDEX1)%LEDS_u8_NUMBEROFLEDS);
 650:	89 81       	ldd	r24, Y+1	; 0x01
 652:	88 2f       	mov	r24, r24
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	01 97       	sbiw	r24, 0x01	; 1
 658:	28 e0       	ldi	r18, 0x08	; 8
 65a:	30 e0       	ldi	r19, 0x00	; 0
 65c:	b9 01       	movw	r22, r18
 65e:	0e 94 c2 04 	call	0x984	; 0x984 <__divmodhi4>
 662:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		LEDS_voidSetLedOff((u8IndexLoc)%LEDS_u8_NUMBEROFLEDS);
 666:	89 81       	ldd	r24, Y+1	; 0x01
 668:	87 70       	andi	r24, 0x07	; 7
 66a:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff((u8IndexLoc+u8_INDEX1)%LEDS_u8_NUMBEROFLEDS);
 66e:	89 81       	ldd	r24, Y+1	; 0x01
 670:	88 2f       	mov	r24, r24
 672:	90 e0       	ldi	r25, 0x00	; 0
 674:	01 96       	adiw	r24, 0x01	; 1
 676:	28 e0       	ldi	r18, 0x08	; 8
 678:	30 e0       	ldi	r19, 0x00	; 0
 67a:	b9 01       	movw	r22, r18
 67c:	0e 94 c2 04 	call	0x984	; 0x984 <__divmodhi4>
 680:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff((u8IndexLoc+u8_INDEX2)%LEDS_u8_NUMBEROFLEDS);
 684:	89 81       	ldd	r24, Y+1	; 0x01
 686:	88 2f       	mov	r24, r24
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	02 96       	adiw	r24, 0x02	; 2
 68c:	28 e0       	ldi	r18, 0x08	; 8
 68e:	30 e0       	ldi	r19, 0x00	; 0
 690:	b9 01       	movw	r22, r18
 692:	0e 94 c2 04 	call	0x984	; 0x984 <__divmodhi4>
 696:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff((u8IndexLoc+u8_INDEX3)%LEDS_u8_NUMBEROFLEDS);
 69a:	89 81       	ldd	r24, Y+1	; 0x01
 69c:	88 2f       	mov	r24, r24
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	03 96       	adiw	r24, 0x03	; 3
 6a2:	28 e0       	ldi	r18, 0x08	; 8
 6a4:	30 e0       	ldi	r19, 0x00	; 0
 6a6:	b9 01       	movw	r22, r18
 6a8:	0e 94 c2 04 	call	0x984	; 0x984 <__divmodhi4>
 6ac:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff((u8IndexLoc+u8_INDEX4)%LEDS_u8_NUMBEROFLEDS);
 6b0:	89 81       	ldd	r24, Y+1	; 0x01
 6b2:	88 2f       	mov	r24, r24
 6b4:	90 e0       	ldi	r25, 0x00	; 0
 6b6:	04 96       	adiw	r24, 0x04	; 4
 6b8:	28 e0       	ldi	r18, 0x08	; 8
 6ba:	30 e0       	ldi	r19, 0x00	; 0
 6bc:	b9 01       	movw	r22, r18
 6be:	0e 94 c2 04 	call	0x984	; 0x984 <__divmodhi4>
 6c2:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff((u8IndexLoc+u8_INDEX5)%LEDS_u8_NUMBEROFLEDS);
 6c6:	89 81       	ldd	r24, Y+1	; 0x01
 6c8:	88 2f       	mov	r24, r24
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	05 96       	adiw	r24, 0x05	; 5
 6ce:	28 e0       	ldi	r18, 0x08	; 8
 6d0:	30 e0       	ldi	r19, 0x00	; 0
 6d2:	b9 01       	movw	r22, r18
 6d4:	0e 94 c2 04 	call	0x984	; 0x984 <__divmodhi4>
 6d8:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff((u8IndexLoc+u8_INDEX6)%LEDS_u8_NUMBEROFLEDS);
 6dc:	89 81       	ldd	r24, Y+1	; 0x01
 6de:	88 2f       	mov	r24, r24
 6e0:	90 e0       	ldi	r25, 0x00	; 0
 6e2:	06 96       	adiw	r24, 0x06	; 6
 6e4:	28 e0       	ldi	r18, 0x08	; 8
 6e6:	30 e0       	ldi	r19, 0x00	; 0
 6e8:	b9 01       	movw	r22, r18
 6ea:	0e 94 c2 04 	call	0x984	; 0x984 <__divmodhi4>
 6ee:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		if (u8IndexLoc!=u8_INDEX1)
 6f2:	89 81       	ldd	r24, Y+1	; 0x01
 6f4:	81 30       	cpi	r24, 0x01	; 1
 6f6:	31 f0       	breq	.+12     	; 0x704 <voidAnimationOne+0x18a>
		Delay_ms(300);
 6f8:	6c e2       	ldi	r22, 0x2C	; 44
 6fa:	71 e0       	ldi	r23, 0x01	; 1
 6fc:	80 e0       	ldi	r24, 0x00	; 0
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	0e 94 36 00 	call	0x6c	; 0x6c <Delay_ms>
		LEDS_voidSetLedOff((u8IndexLoc+u8_INDEX7)%LEDS_u8_NUMBEROFLEDS);
		if(u8IndexLoc!=u8_INDEX7)
		Delay_ms(300);
	}

	for(u8 u8IndexLoc=LEDS_u8_NUMBEROFLEDS;u8IndexLoc>u8_INDEX0;u8IndexLoc--)
 704:	89 81       	ldd	r24, Y+1	; 0x01
 706:	81 50       	subi	r24, 0x01	; 1
 708:	89 83       	std	Y+1, r24	; 0x01
 70a:	89 81       	ldd	r24, Y+1	; 0x01
 70c:	88 23       	and	r24, r24
 70e:	09 f0       	breq	.+2      	; 0x712 <voidAnimationOne+0x198>
 710:	9f cf       	rjmp	.-194    	; 0x650 <voidAnimationOne+0xd6>
		LEDS_voidSetLedOff((u8IndexLoc+u8_INDEX5)%LEDS_u8_NUMBEROFLEDS);
		LEDS_voidSetLedOff((u8IndexLoc+u8_INDEX6)%LEDS_u8_NUMBEROFLEDS);
		if (u8IndexLoc!=u8_INDEX1)
		Delay_ms(300);
	}
}
 712:	0f 90       	pop	r0
 714:	0f 90       	pop	r0
 716:	cf 91       	pop	r28
 718:	df 91       	pop	r29
 71a:	08 95       	ret

0000071c <voidAnimationTwo>:

void voidAnimationTwo(void)
{
 71c:	df 93       	push	r29
 71e:	cf 93       	push	r28
 720:	00 d0       	rcall	.+0      	; 0x722 <voidAnimationTwo+0x6>
 722:	cd b7       	in	r28, 0x3d	; 61
 724:	de b7       	in	r29, 0x3e	; 62
	for(u8 u8IndexLoc=0;u8IndexLoc < (LEDS_u8_NUMBEROFLEDS/u8_INDEX2);u8IndexLoc++)
 726:	1a 82       	std	Y+2, r1	; 0x02
 728:	13 c0       	rjmp	.+38     	; 0x750 <voidAnimationTwo+0x34>
	{
		LEDS_voidSetLedOn(u8IndexLoc);
 72a:	8a 81       	ldd	r24, Y+2	; 0x02
 72c:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		LEDS_voidSetLedOn(u8_INDEX7-u8IndexLoc);
 730:	97 e0       	ldi	r25, 0x07	; 7
 732:	8a 81       	ldd	r24, Y+2	; 0x02
 734:	29 2f       	mov	r18, r25
 736:	28 1b       	sub	r18, r24
 738:	82 2f       	mov	r24, r18
 73a:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		Delay_ms(300);
 73e:	6c e2       	ldi	r22, 0x2C	; 44
 740:	71 e0       	ldi	r23, 0x01	; 1
 742:	80 e0       	ldi	r24, 0x00	; 0
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	0e 94 36 00 	call	0x6c	; 0x6c <Delay_ms>
	}
}

void voidAnimationTwo(void)
{
	for(u8 u8IndexLoc=0;u8IndexLoc < (LEDS_u8_NUMBEROFLEDS/u8_INDEX2);u8IndexLoc++)
 74a:	8a 81       	ldd	r24, Y+2	; 0x02
 74c:	8f 5f       	subi	r24, 0xFF	; 255
 74e:	8a 83       	std	Y+2, r24	; 0x02
 750:	8a 81       	ldd	r24, Y+2	; 0x02
 752:	84 30       	cpi	r24, 0x04	; 4
 754:	50 f3       	brcs	.-44     	; 0x72a <voidAnimationTwo+0xe>
	{
		LEDS_voidSetLedOn(u8IndexLoc);
		LEDS_voidSetLedOn(u8_INDEX7-u8IndexLoc);
		Delay_ms(300);
	}
	for(u8 u8IndexLoc=3;u8IndexLoc<LEDS_u8_NUMBEROFLEDS;u8IndexLoc++)
 756:	83 e0       	ldi	r24, 0x03	; 3
 758:	89 83       	std	Y+1, r24	; 0x01
 75a:	16 c0       	rjmp	.+44     	; 0x788 <voidAnimationTwo+0x6c>
		{
			LEDS_voidSetLedOff(u8IndexLoc);
 75c:	89 81       	ldd	r24, Y+1	; 0x01
 75e:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
			LEDS_voidSetLedOff(u8_INDEX7-u8IndexLoc);
 762:	97 e0       	ldi	r25, 0x07	; 7
 764:	89 81       	ldd	r24, Y+1	; 0x01
 766:	29 2f       	mov	r18, r25
 768:	28 1b       	sub	r18, r24
 76a:	82 2f       	mov	r24, r18
 76c:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
			if(u8IndexLoc!=u8_INDEX3)
 770:	89 81       	ldd	r24, Y+1	; 0x01
 772:	83 30       	cpi	r24, 0x03	; 3
 774:	31 f0       	breq	.+12     	; 0x782 <voidAnimationTwo+0x66>
			Delay_ms(300);
 776:	6c e2       	ldi	r22, 0x2C	; 44
 778:	71 e0       	ldi	r23, 0x01	; 1
 77a:	80 e0       	ldi	r24, 0x00	; 0
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	0e 94 36 00 	call	0x6c	; 0x6c <Delay_ms>
	{
		LEDS_voidSetLedOn(u8IndexLoc);
		LEDS_voidSetLedOn(u8_INDEX7-u8IndexLoc);
		Delay_ms(300);
	}
	for(u8 u8IndexLoc=3;u8IndexLoc<LEDS_u8_NUMBEROFLEDS;u8IndexLoc++)
 782:	89 81       	ldd	r24, Y+1	; 0x01
 784:	8f 5f       	subi	r24, 0xFF	; 255
 786:	89 83       	std	Y+1, r24	; 0x01
 788:	89 81       	ldd	r24, Y+1	; 0x01
 78a:	88 30       	cpi	r24, 0x08	; 8
 78c:	38 f3       	brcs	.-50     	; 0x75c <voidAnimationTwo+0x40>
			LEDS_voidSetLedOff(u8IndexLoc);
			LEDS_voidSetLedOff(u8_INDEX7-u8IndexLoc);
			if(u8IndexLoc!=u8_INDEX3)
			Delay_ms(300);
		}
}
 78e:	0f 90       	pop	r0
 790:	0f 90       	pop	r0
 792:	cf 91       	pop	r28
 794:	df 91       	pop	r29
 796:	08 95       	ret

00000798 <voidAnimationThree>:
void voidAnimationThree(void)
{
 798:	df 93       	push	r29
 79a:	cf 93       	push	r28
 79c:	cd b7       	in	r28, 0x3d	; 61
 79e:	de b7       	in	r29, 0x3e	; 62


		LEDS_voidSetLedOn(LEDS_u8_LED0);
 7a0:	80 e0       	ldi	r24, 0x00	; 0
 7a2:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		LEDS_voidSetLedOn(LEDS_u8_LED1);
 7a6:	81 e0       	ldi	r24, 0x01	; 1
 7a8:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		LEDS_voidSetLedOn(LEDS_u8_LED2);
 7ac:	82 e0       	ldi	r24, 0x02	; 2
 7ae:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		LEDS_voidSetLedOn(LEDS_u8_LED3);
 7b2:	83 e0       	ldi	r24, 0x03	; 3
 7b4:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		LEDS_voidSetLedOn(LEDS_u8_LED4);
 7b8:	84 e0       	ldi	r24, 0x04	; 4
 7ba:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		LEDS_voidSetLedOn(LEDS_u8_LED5);
 7be:	85 e0       	ldi	r24, 0x05	; 5
 7c0:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		LEDS_voidSetLedOn(LEDS_u8_LED6);
 7c4:	86 e0       	ldi	r24, 0x06	; 6
 7c6:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		LEDS_voidSetLedOn(LEDS_u8_LED7);
 7ca:	87 e0       	ldi	r24, 0x07	; 7
 7cc:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		Delay_ms(500);
 7d0:	64 ef       	ldi	r22, 0xF4	; 244
 7d2:	71 e0       	ldi	r23, 0x01	; 1
 7d4:	80 e0       	ldi	r24, 0x00	; 0
 7d6:	90 e0       	ldi	r25, 0x00	; 0
 7d8:	0e 94 36 00 	call	0x6c	; 0x6c <Delay_ms>
		LEDS_voidSetLedOff(LEDS_u8_LED0);
 7dc:	80 e0       	ldi	r24, 0x00	; 0
 7de:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff(LEDS_u8_LED1);
 7e2:	81 e0       	ldi	r24, 0x01	; 1
 7e4:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff(LEDS_u8_LED2);
 7e8:	82 e0       	ldi	r24, 0x02	; 2
 7ea:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff(LEDS_u8_LED3);
 7ee:	83 e0       	ldi	r24, 0x03	; 3
 7f0:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff(LEDS_u8_LED4);
 7f4:	84 e0       	ldi	r24, 0x04	; 4
 7f6:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff(LEDS_u8_LED5);
 7fa:	85 e0       	ldi	r24, 0x05	; 5
 7fc:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff(LEDS_u8_LED6);
 800:	86 e0       	ldi	r24, 0x06	; 6
 802:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff(LEDS_u8_LED7);
 806:	87 e0       	ldi	r24, 0x07	; 7
 808:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		Delay_ms(500);
 80c:	64 ef       	ldi	r22, 0xF4	; 244
 80e:	71 e0       	ldi	r23, 0x01	; 1
 810:	80 e0       	ldi	r24, 0x00	; 0
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	0e 94 36 00 	call	0x6c	; 0x6c <Delay_ms>

}
 818:	cf 91       	pop	r28
 81a:	df 91       	pop	r29
 81c:	08 95       	ret

0000081e <voidAnimationFour>:

void voidAnimationFour(void)
{
 81e:	df 93       	push	r29
 820:	cf 93       	push	r28
 822:	00 d0       	rcall	.+0      	; 0x824 <voidAnimationFour+0x6>
 824:	cd b7       	in	r28, 0x3d	; 61
 826:	de b7       	in	r29, 0x3e	; 62
	u8 u8CounterLoc=0;
 828:	1a 82       	std	Y+2, r1	; 0x02
	for(u8 temp=1;temp<=u8_FULL_UNSIGNED_EIGHT_BIT_NUMBER;temp++)
 82a:	81 e0       	ldi	r24, 0x01	; 1
 82c:	89 83       	std	Y+1, r24	; 0x01
	{
		u8CounterLoc=temp;
 82e:	89 81       	ldd	r24, Y+1	; 0x01
 830:	8a 83       	std	Y+2, r24	; 0x02
		if((u8CounterLoc-u8_SEVEN_DIGHT)>=u8_INDEX0)
 832:	8a 81       	ldd	r24, Y+2	; 0x02
 834:	88 2f       	mov	r24, r24
 836:	90 e0       	ldi	r25, 0x00	; 0
 838:	80 58       	subi	r24, 0x80	; 128
 83a:	90 40       	sbci	r25, 0x00	; 0
 83c:	99 23       	and	r25, r25
 83e:	34 f0       	brlt	.+12     	; 0x84c <voidAnimationFour+0x2e>
		{
			u8CounterLoc-=u8_SEVEN_DIGHT;
 840:	8a 81       	ldd	r24, Y+2	; 0x02
 842:	80 58       	subi	r24, 0x80	; 128
 844:	8a 83       	std	Y+2, r24	; 0x02
			LEDS_voidSetLedOn(LEDS_u8_LED7);
 846:	87 e0       	ldi	r24, 0x07	; 7
 848:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		}
		if((u8CounterLoc-u8_SIX_DIGHT)>=u8_INDEX0)
 84c:	8a 81       	ldd	r24, Y+2	; 0x02
 84e:	88 2f       	mov	r24, r24
 850:	90 e0       	ldi	r25, 0x00	; 0
 852:	80 54       	subi	r24, 0x40	; 64
 854:	90 40       	sbci	r25, 0x00	; 0
 856:	99 23       	and	r25, r25
 858:	34 f0       	brlt	.+12     	; 0x866 <__stack+0x7>
		{
			u8CounterLoc-=u8_SIX_DIGHT;
 85a:	8a 81       	ldd	r24, Y+2	; 0x02
 85c:	80 54       	subi	r24, 0x40	; 64
 85e:	8a 83       	std	Y+2, r24	; 0x02
			LEDS_voidSetLedOn(LEDS_u8_LED6);
 860:	86 e0       	ldi	r24, 0x06	; 6
 862:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		}
		if((u8CounterLoc-u8_FIVE_DIGHT)>=u8_INDEX0)
 866:	8a 81       	ldd	r24, Y+2	; 0x02
 868:	88 2f       	mov	r24, r24
 86a:	90 e0       	ldi	r25, 0x00	; 0
 86c:	80 97       	sbiw	r24, 0x20	; 32
 86e:	99 23       	and	r25, r25
 870:	34 f0       	brlt	.+12     	; 0x87e <__stack+0x1f>
		{
			u8CounterLoc-=u8_FIVE_DIGHT;
 872:	8a 81       	ldd	r24, Y+2	; 0x02
 874:	80 52       	subi	r24, 0x20	; 32
 876:	8a 83       	std	Y+2, r24	; 0x02
			LEDS_voidSetLedOn(LEDS_u8_LED5);
 878:	85 e0       	ldi	r24, 0x05	; 5
 87a:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		}
		if((u8CounterLoc-u8_FOUR_DIGHT)>=u8_INDEX0)
 87e:	8a 81       	ldd	r24, Y+2	; 0x02
 880:	88 2f       	mov	r24, r24
 882:	90 e0       	ldi	r25, 0x00	; 0
 884:	40 97       	sbiw	r24, 0x10	; 16
 886:	99 23       	and	r25, r25
 888:	34 f0       	brlt	.+12     	; 0x896 <__stack+0x37>
		{
			u8CounterLoc-=u8_FOUR_DIGHT;
 88a:	8a 81       	ldd	r24, Y+2	; 0x02
 88c:	80 51       	subi	r24, 0x10	; 16
 88e:	8a 83       	std	Y+2, r24	; 0x02
			LEDS_voidSetLedOn(LEDS_u8_LED4);
 890:	84 e0       	ldi	r24, 0x04	; 4
 892:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		}
		if((u8CounterLoc-u8_THREE_DIGHT)>=u8_INDEX0)
 896:	8a 81       	ldd	r24, Y+2	; 0x02
 898:	88 2f       	mov	r24, r24
 89a:	90 e0       	ldi	r25, 0x00	; 0
 89c:	08 97       	sbiw	r24, 0x08	; 8
 89e:	99 23       	and	r25, r25
 8a0:	34 f0       	brlt	.+12     	; 0x8ae <__stack+0x4f>
		{
			u8CounterLoc-=u8_THREE_DIGHT;
 8a2:	8a 81       	ldd	r24, Y+2	; 0x02
 8a4:	88 50       	subi	r24, 0x08	; 8
 8a6:	8a 83       	std	Y+2, r24	; 0x02
			LEDS_voidSetLedOn(LEDS_u8_LED3);
 8a8:	83 e0       	ldi	r24, 0x03	; 3
 8aa:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		}
		if((u8CounterLoc-u8_TWO_DIGHT)>=u8_INDEX0)
 8ae:	8a 81       	ldd	r24, Y+2	; 0x02
 8b0:	88 2f       	mov	r24, r24
 8b2:	90 e0       	ldi	r25, 0x00	; 0
 8b4:	04 97       	sbiw	r24, 0x04	; 4
 8b6:	99 23       	and	r25, r25
 8b8:	34 f0       	brlt	.+12     	; 0x8c6 <__stack+0x67>
		{
			u8CounterLoc-=u8_TWO_DIGHT;
 8ba:	8a 81       	ldd	r24, Y+2	; 0x02
 8bc:	84 50       	subi	r24, 0x04	; 4
 8be:	8a 83       	std	Y+2, r24	; 0x02
			LEDS_voidSetLedOn(LEDS_u8_LED2);
 8c0:	82 e0       	ldi	r24, 0x02	; 2
 8c2:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		}
		if((u8CounterLoc-u8_ONE_DIGHT)>=u8_INDEX0)
 8c6:	8a 81       	ldd	r24, Y+2	; 0x02
 8c8:	88 2f       	mov	r24, r24
 8ca:	90 e0       	ldi	r25, 0x00	; 0
 8cc:	02 97       	sbiw	r24, 0x02	; 2
 8ce:	99 23       	and	r25, r25
 8d0:	34 f0       	brlt	.+12     	; 0x8de <__stack+0x7f>
		{
			u8CounterLoc-=u8_ONE_DIGHT;
 8d2:	8a 81       	ldd	r24, Y+2	; 0x02
 8d4:	82 50       	subi	r24, 0x02	; 2
 8d6:	8a 83       	std	Y+2, r24	; 0x02
			LEDS_voidSetLedOn(LEDS_u8_LED1);
 8d8:	81 e0       	ldi	r24, 0x01	; 1
 8da:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		}
		if((u8CounterLoc-u8_ZERO_DIGHT)>=u8_INDEX0)
 8de:	8a 81       	ldd	r24, Y+2	; 0x02
 8e0:	88 2f       	mov	r24, r24
 8e2:	90 e0       	ldi	r25, 0x00	; 0
 8e4:	01 97       	sbiw	r24, 0x01	; 1
 8e6:	99 23       	and	r25, r25
 8e8:	34 f0       	brlt	.+12     	; 0x8f6 <__stack+0x97>
		{
			u8CounterLoc-=u8_ZERO_DIGHT;
 8ea:	8a 81       	ldd	r24, Y+2	; 0x02
 8ec:	81 50       	subi	r24, 0x01	; 1
 8ee:	8a 83       	std	Y+2, r24	; 0x02
			LEDS_voidSetLedOn(LEDS_u8_LED0);
 8f0:	80 e0       	ldi	r24, 0x00	; 0
 8f2:	0e 94 c2 01 	call	0x384	; 0x384 <LEDS_voidSetLedOn>
		}
		Delay_ms(300);
 8f6:	6c e2       	ldi	r22, 0x2C	; 44
 8f8:	71 e0       	ldi	r23, 0x01	; 1
 8fa:	80 e0       	ldi	r24, 0x00	; 0
 8fc:	90 e0       	ldi	r25, 0x00	; 0
 8fe:	0e 94 36 00 	call	0x6c	; 0x6c <Delay_ms>
		LEDS_voidSetLedOff(LEDS_u8_LED0);
 902:	80 e0       	ldi	r24, 0x00	; 0
 904:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff(LEDS_u8_LED1);
 908:	81 e0       	ldi	r24, 0x01	; 1
 90a:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff(LEDS_u8_LED2);
 90e:	82 e0       	ldi	r24, 0x02	; 2
 910:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff(LEDS_u8_LED3);
 914:	83 e0       	ldi	r24, 0x03	; 3
 916:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff(LEDS_u8_LED4);
 91a:	84 e0       	ldi	r24, 0x04	; 4
 91c:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff(LEDS_u8_LED5);
 920:	85 e0       	ldi	r24, 0x05	; 5
 922:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff(LEDS_u8_LED6);
 926:	86 e0       	ldi	r24, 0x06	; 6
 928:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		LEDS_voidSetLedOff(LEDS_u8_LED7);
 92c:	87 e0       	ldi	r24, 0x07	; 7
 92e:	0e 94 29 02 	call	0x452	; 0x452 <LEDS_voidSetLedOff>
		Delay_ms(300);
 932:	6c e2       	ldi	r22, 0x2C	; 44
 934:	71 e0       	ldi	r23, 0x01	; 1
 936:	80 e0       	ldi	r24, 0x00	; 0
 938:	90 e0       	ldi	r25, 0x00	; 0
 93a:	0e 94 36 00 	call	0x6c	; 0x6c <Delay_ms>
}

void voidAnimationFour(void)
{
	u8 u8CounterLoc=0;
	for(u8 temp=1;temp<=u8_FULL_UNSIGNED_EIGHT_BIT_NUMBER;temp++)
 93e:	89 81       	ldd	r24, Y+1	; 0x01
 940:	8f 5f       	subi	r24, 0xFF	; 255
 942:	89 83       	std	Y+1, r24	; 0x01
 944:	74 cf       	rjmp	.-280    	; 0x82e <voidAnimationFour+0x10>

00000946 <__mulsi3>:
 946:	62 9f       	mul	r22, r18
 948:	d0 01       	movw	r26, r0
 94a:	73 9f       	mul	r23, r19
 94c:	f0 01       	movw	r30, r0
 94e:	82 9f       	mul	r24, r18
 950:	e0 0d       	add	r30, r0
 952:	f1 1d       	adc	r31, r1
 954:	64 9f       	mul	r22, r20
 956:	e0 0d       	add	r30, r0
 958:	f1 1d       	adc	r31, r1
 95a:	92 9f       	mul	r25, r18
 95c:	f0 0d       	add	r31, r0
 95e:	83 9f       	mul	r24, r19
 960:	f0 0d       	add	r31, r0
 962:	74 9f       	mul	r23, r20
 964:	f0 0d       	add	r31, r0
 966:	65 9f       	mul	r22, r21
 968:	f0 0d       	add	r31, r0
 96a:	99 27       	eor	r25, r25
 96c:	72 9f       	mul	r23, r18
 96e:	b0 0d       	add	r27, r0
 970:	e1 1d       	adc	r30, r1
 972:	f9 1f       	adc	r31, r25
 974:	63 9f       	mul	r22, r19
 976:	b0 0d       	add	r27, r0
 978:	e1 1d       	adc	r30, r1
 97a:	f9 1f       	adc	r31, r25
 97c:	bd 01       	movw	r22, r26
 97e:	cf 01       	movw	r24, r30
 980:	11 24       	eor	r1, r1
 982:	08 95       	ret

00000984 <__divmodhi4>:
 984:	97 fb       	bst	r25, 7
 986:	09 2e       	mov	r0, r25
 988:	07 26       	eor	r0, r23
 98a:	0a d0       	rcall	.+20     	; 0x9a0 <__divmodhi4_neg1>
 98c:	77 fd       	sbrc	r23, 7
 98e:	04 d0       	rcall	.+8      	; 0x998 <__divmodhi4_neg2>
 990:	2e d0       	rcall	.+92     	; 0x9ee <__udivmodhi4>
 992:	06 d0       	rcall	.+12     	; 0x9a0 <__divmodhi4_neg1>
 994:	00 20       	and	r0, r0
 996:	1a f4       	brpl	.+6      	; 0x99e <__divmodhi4_exit>

00000998 <__divmodhi4_neg2>:
 998:	70 95       	com	r23
 99a:	61 95       	neg	r22
 99c:	7f 4f       	sbci	r23, 0xFF	; 255

0000099e <__divmodhi4_exit>:
 99e:	08 95       	ret

000009a0 <__divmodhi4_neg1>:
 9a0:	f6 f7       	brtc	.-4      	; 0x99e <__divmodhi4_exit>
 9a2:	90 95       	com	r25
 9a4:	81 95       	neg	r24
 9a6:	9f 4f       	sbci	r25, 0xFF	; 255
 9a8:	08 95       	ret

000009aa <__udivmodsi4>:
 9aa:	a1 e2       	ldi	r26, 0x21	; 33
 9ac:	1a 2e       	mov	r1, r26
 9ae:	aa 1b       	sub	r26, r26
 9b0:	bb 1b       	sub	r27, r27
 9b2:	fd 01       	movw	r30, r26
 9b4:	0d c0       	rjmp	.+26     	; 0x9d0 <__udivmodsi4_ep>

000009b6 <__udivmodsi4_loop>:
 9b6:	aa 1f       	adc	r26, r26
 9b8:	bb 1f       	adc	r27, r27
 9ba:	ee 1f       	adc	r30, r30
 9bc:	ff 1f       	adc	r31, r31
 9be:	a2 17       	cp	r26, r18
 9c0:	b3 07       	cpc	r27, r19
 9c2:	e4 07       	cpc	r30, r20
 9c4:	f5 07       	cpc	r31, r21
 9c6:	20 f0       	brcs	.+8      	; 0x9d0 <__udivmodsi4_ep>
 9c8:	a2 1b       	sub	r26, r18
 9ca:	b3 0b       	sbc	r27, r19
 9cc:	e4 0b       	sbc	r30, r20
 9ce:	f5 0b       	sbc	r31, r21

000009d0 <__udivmodsi4_ep>:
 9d0:	66 1f       	adc	r22, r22
 9d2:	77 1f       	adc	r23, r23
 9d4:	88 1f       	adc	r24, r24
 9d6:	99 1f       	adc	r25, r25
 9d8:	1a 94       	dec	r1
 9da:	69 f7       	brne	.-38     	; 0x9b6 <__udivmodsi4_loop>
 9dc:	60 95       	com	r22
 9de:	70 95       	com	r23
 9e0:	80 95       	com	r24
 9e2:	90 95       	com	r25
 9e4:	9b 01       	movw	r18, r22
 9e6:	ac 01       	movw	r20, r24
 9e8:	bd 01       	movw	r22, r26
 9ea:	cf 01       	movw	r24, r30
 9ec:	08 95       	ret

000009ee <__udivmodhi4>:
 9ee:	aa 1b       	sub	r26, r26
 9f0:	bb 1b       	sub	r27, r27
 9f2:	51 e1       	ldi	r21, 0x11	; 17
 9f4:	07 c0       	rjmp	.+14     	; 0xa04 <__udivmodhi4_ep>

000009f6 <__udivmodhi4_loop>:
 9f6:	aa 1f       	adc	r26, r26
 9f8:	bb 1f       	adc	r27, r27
 9fa:	a6 17       	cp	r26, r22
 9fc:	b7 07       	cpc	r27, r23
 9fe:	10 f0       	brcs	.+4      	; 0xa04 <__udivmodhi4_ep>
 a00:	a6 1b       	sub	r26, r22
 a02:	b7 0b       	sbc	r27, r23

00000a04 <__udivmodhi4_ep>:
 a04:	88 1f       	adc	r24, r24
 a06:	99 1f       	adc	r25, r25
 a08:	5a 95       	dec	r21
 a0a:	a9 f7       	brne	.-22     	; 0x9f6 <__udivmodhi4_loop>
 a0c:	80 95       	com	r24
 a0e:	90 95       	com	r25
 a10:	bc 01       	movw	r22, r24
 a12:	cd 01       	movw	r24, r26
 a14:	08 95       	ret

00000a16 <_exit>:
 a16:	f8 94       	cli

00000a18 <__stop_program>:
 a18:	ff cf       	rjmp	.-2      	; 0xa18 <__stop_program>
